if(!self.define){let e,i={};const o=(o,t)=>(o=new URL(o+".js",t).href,i[o]||new Promise((i=>{if("document"in self){const e=document.createElement("script");e.src=o,e.onload=i,document.head.appendChild(e)}else e=o,importScripts(o),i()})).then((()=>{let e=i[o];if(!e)throw new Error(`Module ${o} didnâ€™t register its module`);return e})));self.define=(t,n)=>{const s=e||("document"in self?document.currentScript.src:"")||location.href;if(i[s])return;let u={};const l=e=>o(e,s),r={module:{uri:s},exports:u,require:l};i[s]=Promise.all(t.map((e=>r[e]||l(e)))).then((e=>(n(...e),u)))}}define(["./workbox-2d118ab0"],(function(e){"use strict";e.setCacheNameDetails({prefix:"danielkogut.github.io"}),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),e.precacheAndRoute([{url:"/danieltugok.github.io/css/app.795a9fca.css",revision:null},{url:"/danieltugok.github.io/index.html",revision:"f14c8167707239118c419d34d9673744"},{url:"/danieltugok.github.io/js/about.3647b3cb.js",revision:null},{url:"/danieltugok.github.io/js/app.55cb10ae.js",revision:null},{url:"/danieltugok.github.io/js/chunk-vendors.9939fa0f.js",revision:null},{url:"/danieltugok.github.io/manifest.json",revision:"b36bf7cc7393023b813cc2f2c9e1ef25"},{url:"/danieltugok.github.io/robots.txt",revision:"b6216d61c03e6ce0c9aea6ca7808f7ca"}],{})}));
//# sourceMappingURL=service-worker.js.map
